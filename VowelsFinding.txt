import java.util.*;

public class Solution {
    public static void main(String[] args) {
        // Example usage
        String[] words = {"apple", "orange", "banana", "umbrella", "elephant"};
        int[][] queries = {{0, 2}, {1, 4}, {2, 3}};

        Solution solution = new Solution();
        int[] result = solution.vowelStrings(words, queries);
        System.out.println(Arrays.toString(result));
    }

    public int[] vowelStrings(String[] words, int[][] queries) {
        int n = words.length;
        int[] prefixVowelCount = new int[n + 1];

        // Calculate prefix counts of vowel start and end strings
        for (int i = 0; i < n; i++) {
            prefixVowelCount[i + 1] = prefixVowelCount[i] + (isVowelString(words[i]) ? 1 : 0);
        }

        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            int li = queries[i][0];
            int ri = queries[i][1];
            result[i] = prefixVowelCount[ri + 1] - prefixVowelCount[li];
        }

        return result;
    }

    private boolean isVowelString(String word) {
        return isVowel(word.charAt(0)) && isVowel(word.charAt(word.length() - 1));
    }

    private boolean isVowel(char c) {
        return "aeiou".indexOf(Character.toLowerCase(c)) != -1;
    }
}